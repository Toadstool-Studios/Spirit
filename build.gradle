plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "1.0-SNAPSHOT" apply false
}

architectury {
    minecraft = rootProject.minecraft_version
}

subprojects {
    apply plugin: "dev.architectury.loom"

    loom {
        silentMojangMappingsLicense()
    }

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        mappings loom.layered() {
            officialMojangMappings()
            parchment("org.parchmentmc.data:parchment-$rootProject.minecraft_version:$rootProject.parchment_version@zip")
        }
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    archivesBaseName = rootProject.archives_base_name
    version = rootProject.mod_version
    group = rootProject.maven_group

    repositories {
        maven {
            url "https://cursemaven.com"
            content {
                includeGroup "curse.maven"
            }
        }
        maven { url "https://nexus.resourcefulbees.com/repository/maven-public/" }
        maven { url 'https://jitpack.io' }
        maven { url 'https://maven.architectury.dev/' }
        maven { url 'https://maven.neoforged.net/releases' }
        maven { url 'https://maven.resourcefulbees.com/repository/maven-public/' }
        maven { url 'https://maven.twelveiterations.com/repository/maven-public/' }
        maven { url 'https://maven.terraformersmc.com/' }
        maven { url 'https://maven.ladysnake.org/releases' }
        maven {
            url = "https://jitpack.io"
            content {
                includeGroup("com.github.LlamaLad7")
                includeGroup("com.github.llamalad7.mixinextras")
            }
        }
        exclusiveContent {
            forRepository {
                maven {
                    name = "Modrinth"
                    url = "https://api.modrinth.com/maven"
                }
            }
            filter {
                includeGroup("maven.modrinth")
            }
        }
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
        options.release = 17
    }

    java {
        withSourcesJar()
    }
}
